#https://wiki.archlinux.org/index.php/Tmux
#cfg https://gist.github.com/spicycode/1229612
#cfg https://gist.github.com/anonymous/6bebae3eb9f7b972e6f0
#Best cfg https://gist.github.com/shinzui/866897
#TMUX cheatsheet - https://gist.github.com/MohamedAlaa/2961058

unbind C-b
set -g prefix C-a
set-option -g prefix C-a
# set-option -g prefix C-b
bind-key -n C-b send-prefix
# bind C-b send-prefix
bind-key C-a last-window
bind-key C-c new-window
bind-key C-n next-window
bind-key C-p previous-window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# detach client
bind-key d detach
bind-key C-d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-window
bind-key 'S' choose-session

# display visible indicator of each pane
bind-key w display-panes

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window
bind-key C-q confirm-before kill-pane
#bind-key x kill-pane
#bind-key X kill-window

# Ctrl-Left/Right cycles thru windows (no prefix)
bind-key -n "C-Left"  select-window -t :-
bind-key -n "C-Right" select-window -t :+

# Ctrl-Up/Down cyles thru panes (no prefix)
bind-key -n "C-Up"   select-pane -t :.-
bind-key -n "C-Down" select-pane -t :.+

# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"

# displays
bind-key * list-clients

# reload config
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

set -g history-limit 10000

# Start numbering at 1
set -g base-index 1

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# listen for activity on all windows
set -g bell-action any
#set -g bell-action none

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

set -g display-time 400

# Automatically set window title
set-window-option -g automatic-rename on
setw -g automatic-rename on
set-option -g set-titles on

# y and p as in vim
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
# bind -t vi-copy 'Space' halfpage-down
# bind -t vi-copy 'Bspace' halfpage-up

# Copy mode
setw -g mode-keys vi
bind [ copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection

# easy-to-remember split pane commands
bind-key | split-window -h
bind-key - split-window -v
bind-key _ split-window -v

# moving between panes with vim movement keys
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
set -g status-interval 15

# set default terminal - this is necessary for VIM begin and end to work
set -g default-terminal screen-256color

# THEME
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
# set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]'


# Color for left session name
set -g status-left '#[fg=colour236,bg=colour114,bold]#S#[fg=colour114,bg=colour240,nobold]#[fg=colour240,bg=colour234,nobold]'
if '[ `hostname -s` = chirm ]' \
    'set -g status-left "#[fg=colour236,bg=colour215,bold]#S#[fg=colour215,bg=colour240,nobold]#[fg=colour240,bg=colour234,nobold]"'
if '[ `hostname -s` = build01 ]' \
    'set -g status-left "#[fg=colour236,bg=colour141,bold]#S#[fg=colour141,bg=colour240,nobold]#[fg=colour240,bg=colour234,nobold]"'



# set -g status-left '#[fg=colour236,bg=colour114,bold]#S #[fg=colour114,bg=colour234,bold]'
set -g status-right '#(eval tmuxline `tmux display -p "#{client_width}"`)'
set -g status-right-length 150

# help at http://manpages.ubuntu.com/manpages/trusty/man1/tmux.1.html
# set -g window-status-format "#[fg=colour244,bg=colour234] #I.#[fg=colour231,bg=colour234]#W"
set -g window-status-format "#[bg=colour234] #[default]#[fg=colour244]#I.#[default]#W"
set -g window-status-current-format "#[fg=colour234,bg=colour173]#[fg=colour231,bg=colour173,nobold] #I.#[fg=colour231,bold]#W #[fg=colour173,bg=colour234,nobold]"

# set-window-option -g window-status-fg colour249
set-window-option -g window-status-activity-attr bold
# set-window-option -g window-status-bell-attr none
set-window-option -g window-status-activity-fg white
set-window-option -g window-status-activity-bg colour237
set-window-option -g window-status-bell-bg red

# """"""""""""""
# " tmux fixes "
# """"""""""""""
# " Handle tmux $TERM quirks in vim
# if $TERM =~ '^screen-256color'
#     map <Esc>OH <Home>
#     map! <Esc>OH <Home>
#     map <Esc>OF <End>
#     map! <Esc>OF <End>
# endif



# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'



# restore session for vim and neovim
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'                #set automatic sessions restore
set -g @continuum-save-interval '7'           #set autosave interval to lower value

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
run '~/.tmux/plugins/tpm/tpm'

